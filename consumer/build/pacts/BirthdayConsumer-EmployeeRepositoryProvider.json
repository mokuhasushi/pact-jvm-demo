{
  "provider": {
    "name": "EmployeeRepositoryProvider"
  },
  "consumer": {
    "name": "BirthdayConsumer"
  },
  "interactions": [
    {
      "description": "a request for json data",
      "request": {
        "method": "GET",
        "path": "/provider.json",
        "query": {
          "month": [
            "2"
          ],
          "day": [
            "2"
          ]
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": {
          "name": "john",
          "emailaddress": "john.doe@foobar.com"
        },
        "matchingRules": {
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        }
      },
      "providerStates": [
        {
          "name": ""
        }
      ]
    },
    {
      "description": "an invalid request",
      "request": {
        "method": "GET",
        "path": "/provider.json"
      },
      "response": {
        "status": 400,
        "body": {
          "error": "valid month and day are required"
        }
      }
    },
    {
      "description": "a request for json data",
      "request": {
        "method": "GET",
        "path": "/provider.json",
        "query": {
          "month": [
            "2"
          ],
          "day": [
            "2"
          ]
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json; charset=UTF-8"
        },
        "body": {
          "name": "john",
          "emailaddress": "john.doe@foobar.com"
        },
        "matchingRules": {
          "header": {
            "Content-Type": {
              "matchers": [
                {
                  "match": "regex",
                  "regex": "application/json(;\\s?charset=[\\w\\-]+)?"
                }
              ],
              "combine": "AND"
            }
          }
        }
      },
      "providerStates": [
        {
          "name": "employee johndoe exists"
        }
      ]
    },
    {
      "description": "a request for employees born on date",
      "request": {
        "method": "GET",
        "path": "/provider.json",
        "query": {
          "month": [
            "2"
          ],
          "day": [
            "2"
          ]
        }
      },
      "response": {
        "status": 404
      },
      "providerStates": [
        {
          "name": "no employees born on date"
        }
      ]
    }
  ],
  "metadata": {
    "pactSpecification": {
      "version": "3.0.0"
    },
    "pact-jvm": {
      "version": "4.1.2"
    }
  }
}